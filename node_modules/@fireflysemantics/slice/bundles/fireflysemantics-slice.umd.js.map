{"version":3,"file":"fireflysemantics-slice.umd.js","sources":["../../../projects/slice/src/lib/models/StoreConfig.ts","../../../projects/slice/src/lib/models/Entity.ts","../../../projects/slice/src/lib/models/constants.ts","../../../projects/slice/src/lib/AbstractStore.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/slice/src/lib/utilities.ts","../../../projects/slice/src/lib/Slice.ts","../../../projects/slice/src/lib/EStore.ts","../../../projects/slice/src/lib/OStore.ts","../../../projects/slice/src/public-api.ts","../../../projects/slice/src/fireflysemantics-slice.ts"],"sourcesContent":["/**\n * The configuration interface for the entity store\n * defines the strings for the ID Key and Global ID key.\n */\nexport interface StoreConfig {\n    idKey: string;\n    guidKey: string;\n};\n  ","\n/**\n * Abstract Entity base class with the \n * gid and id properties declared.\n */\nexport abstract class Entity {\n    public gid?:string\n    public id?:string \n}","export const SCROLL_UP_DEBOUNCE_TIME_20 = 20;\nexport const SEARCH_DEBOUNCE_TIME_300 = 300;\n","import { ReplaySubject, Observable } from \"rxjs\"\nimport { map } from \"rxjs/operators\"\nimport { Delta, Predicate } from \"./models\"\nimport { StoreConfig } from \"./models/StoreConfig\"\n\nconst { freeze } = Object\n\nconst ESTORE_DEFAULT_ID_KEY = \"id\"\nconst ESTORE_DEFAULT_GID_KEY = \"gid\"\n\nexport const ESTORE_CONFIG_DEFAULT: StoreConfig = freeze({\n  idKey: ESTORE_DEFAULT_ID_KEY,\n  guidKey: ESTORE_DEFAULT_GID_KEY\n});\n\nexport abstract class AbstractStore<E> {\n\n  /**\n   * The configuration for the store.\n   */\n   public config: StoreConfig;\n\n   constructor(config?: StoreConfig) {\n     this.config = config\n       ? freeze({ ...ESTORE_CONFIG_DEFAULT, ...config })\n       : ESTORE_CONFIG_DEFAULT;\n   }\n \n  /**\n   * Notifies observers of the store query.\n   */\n  protected notifyQuery = new ReplaySubject<string>(1);\n\n  /**\n   * The current query state.\n   */\n  protected _query: string = '';\n\n  /**\n   * Sets the current query state and notifies observers.\n   */\n  set query(query: string) {\n    this._query = query;\n    this.notifyQuery.next(this._query);\n  }\n\n  /**\n   * @return A snapshot of the query state.\n   */\n  get query() {\n    return this._query;\n  }\n\n  /**\n   * Observe the query.\n   * @example\n     <pre>\n    let query$ = source.observeQuery();\n    </pre>\n  */\n  public observeQuery() {\n    return this.notifyQuery.asObservable();\n  }\n\n\n  /**\n   * The current id key for the EStore instance.\n   * @return this.config.idKey;\n   */\n  get ID_KEY(): string {\n    return this.config.idKey\n  }\n  /**\n   * The current guid key for the EStore instance.\n   * @return this.config.guidKey;\n   */\n  get GUID_KEY(): string {\n    return this.config.guidKey\n  }\n\n  /**\n   * Primary index for the stores elements.\n   */\n  public entries: Map<string, E> = new Map()\n\n  /**\n   * The element entries that are keyed by\n   * an id generated on the server.\n   */\n  public idEntries: Map<string, E> = new Map()\n\n  /**\n   * Create notifications that broacast\n   * the entire set of entries.\n   */\n  protected notify = new ReplaySubject<E[]>(1)\n\n  /**\n   * Create notifications that broacast\n   * store or slice delta state changes.\n   */\n  protected notifyDelta = new ReplaySubject<Delta<E>>(1)\n\n  /**\n   * Call all the notifiers at once.\n   *\n   * @param v\n   * @param delta\n   */\n  protected notifyAll(v: E[], delta: Delta<E>) {\n    this.notify.next(v);\n    this.notifyDelta.next(delta);\n  }\n\n  /**\n   * Observe store state changes.\n   * @param sort Optional sorting function yielding a sorted observable.\n   * @example\n```\nlet todos$ = source.observe();\n//or with a sort by title function\nlet todos$ = source.observe((a, b)=>(a.title > b.title ? -1 : 1));\n```\n  */\n  public observe(sort?: (a: any, b: any) => number): Observable<E[]> {\n    if (sort) {\n      return this.notify.pipe(map((e: E[]) => e.sort(sort)));\n    }\n    return this.notify.asObservable();\n  }\n\n  /**\n   * Observe delta updates.\n   * @example\n     <pre>\n     let todos$ = source.observeDelta();\n     </pre>\n   */\n  public observeDelta(): Observable<Delta<E>> {\n    return this.notifyDelta.asObservable();\n  }\n\n  /**\n   * Check whether the store is empty.\n   * \n   * @return A hot {@link Observable} that indicates whether the store is empty.\n   * \n   * @example\n    <pre>\n    source.isEmpty();\n    </pre>\n  */\n  isEmpty(): Observable<boolean> {\n    return this.notify.pipe(\n      map((entries: E[]) => entries.length == 0)\n    );\n  }\n\n  /**\n   * Check whether the store is empty.\n   * \n   * @return A snapshot that indicates whether the store is empty.\n   * \n   * @example\n     <pre>\n    source.isEmpty();\n    </pre>\n  */\n  isEmptySnapshot(): boolean {\n    return Array.from(this.entries.values()).length == 0;\n  }\n\n  /**\n   * Returns the number of entries contained.\n   * @param p The predicate to apply in order to filter the count\n   */\n  count(p?: Predicate<E>): Observable<number> {\n    if (p) {\n      return this.notify.pipe(\n        map((e: E[]) => e.reduce((total, e) => total + (p(e) ? 1 : 0), 0))\n      );\n    }\n    return this.notify.pipe(map((entries: E[]) => entries.length));\n  }\n\n  /**\n   * Returns a snapshot of the number of entries contained in the store.\n   * @param p The predicate to apply in order to filter the count\n   */\n  countSnapshot(p?: Predicate<E>): number {\n    if (p) {\n      return Array.from(this.entries.values()).filter(p).length;\n    }\n    return Array.from(this.entries.values()).length;\n  }\n\n  /**\n   * Snapshot of all entries.\n   * \n   * @return Snapshot array of all the elements the entities the store contains.\n   * \n   * @example Observe a snapshot of all the entities in the store.\n```\nlet selectedTodos:Todo[] = source.allSnapshot();\n```\n   */\n  allSnapshot(): E[] {\n    return Array.from(this.entries.values());\n  }\n\n  /**\n   * Returns true if the entries contain the identified instance.\n   * \n   * @param target Either an instance of type `E` or a `guid` identifying the instance. \n   * @param byId Whether the lookup should be performed with the `id` key rather than the `guid`.\n   * @returns true if the instance identified by the guid exists, false otherwise.\n   * \n   * @example\n     <pre>\n     let contains:boolean = source.contains(guid);\n     </pre>\n   */\n  contains(target: E | string):boolean {\n    if (typeof target === \"string\") {\n      return this.entries.get(target) ? true : false;\n    }\n    const guid: string = (<any>target)[this.config.guidKey];\n    return this.entries.get(guid) ? true : false;\n  }\n\n  /**\n   * Returns true if the entries contain the identified instance.\n   * \n   * @param target Either an instance of type `E` or a `id` identifying the instance. \n   * @returns true if the instance identified by the `id` exists, false otherwise.\n   * \n   * @example\n     <pre>\n     let contains:boolean = source.contains(guid);\n     </pre>\n   */\n  containsById(target: E | string):boolean {\n    if (typeof target === \"string\") {\n      return this.idEntries.get(target) ? true : false;\n    }\n    const id: string = (<any>target)[this.config.idKey];\n    return this.idEntries.get(id) ? true : false;\n  }\n\n  /**\n   * Find and return the entity identified by the GUID parameter\n   * if it exists and return it.\n   *\n   * @param guid\n   * @return The entity instance if it exists, null otherwise\n   */\n  findOne(guid: string): E | undefined{\n    return this.entries.get(guid);\n  }\n\n  /**\n   * Find and return the entity identified by the ID parameter\n   * if it exists and return it.\n   *\n   * @param id\n   * @return The entity instance if it exists, null otherwise\n   */\n  findOneByID(id: string): E | undefined {\n    return this.idEntries.get(id);\n  }\n\n  /**\n   * Snapshot of the entries that match the predicate.\n   *\n   * @param p The predicate used to query for the selection.\n   * @return A snapshot array containing the entities that match the predicate.\n   * \n   * @example Select all the `Todo` instance where the `title` length is greater than 100. \n```\nlet todos:Todo[]=store.select(todo=>todo.title.length>100);\n```\n   */\n  select(p: Predicate<E>): E[] {\n    const selected: E[] = [];\n    Array.from(this.entries.values()).forEach(e => {\n      if (p(e)) {\n        selected.push(e);\n      }\n    });\n    return selected;\n  }\n\n  /** \n   * Compare entities by GUID \n   * @param e1 The first entity\n   * @param e2 The second entity\n   * @return true if the two entities have equal GUID ids\n   * @example Compare `todo1` with `todo2` by `gid`.\n```\nif (equalsByGUID(todo1, todo2)){...};\n```\n   */\n  equalsByGUID(e1:any, e2:any) {\n    return e1[this.GUID_KEY] == e2[this.GUID_KEY];\n  }\n\n  /**\n   * Compare entities by ID \n   * @param e1 The first entity\n   * @param e2 The second entity\n   * @return true if the two entities have equal ID ids\n   * @example Compare `todo1` with `todo2` by `id`.\n```\nif (equalsByID(todo1, todo2)){...};\n```\n   */\n  equalsByID(e1:any, e2:any) {\n    return e1[this.ID_KEY] == e2[this.ID_KEY];\n  }\n  /**\n   * Calls complete on all {@link BehaviorSubject} instances.\n   * \n   * Call destroy when disposing of the store.\n   */\n  destroy() {\n    this.notify.complete();\n    this.notifyDelta.complete();\n    this.notifyQuery.complete();\n  }\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { ESTORE_CONFIG_DEFAULT } from \"./AbstractStore\";\nimport { Observable, fromEvent, of } from 'rxjs'\nimport { switchMap, pairwise, debounceTime, distinctUntilChanged, map } from 'rxjs/operators'\nimport { nanoid} from \"nanoid\"\nimport { scrollPosition } from \"./models/scrollPosition\";\n\n/**\n * Returns all the entities are distinct by the \n * `property` value argument.  \n * \n * Note that the implementation uses a `Map<string, E>` to\n * index the entities by key.  Therefore the more recent occurences \n * matching a key instance will overwrite the previous ones.\n * \n * @param property The name of the property to check for distinct values by.\n * @param entities The entities in the array.\n * \n * @example\n ```\n  let todos: Todo[] = [\n    { id: 1, title: \"Lets do it!\" },\n    { id: 1, title: \"Lets do it again!\" },\n    { id: 2, title: \"All done!\" }\n  ];\n\n  let todos2: Todo[] = [\n    { id: 1, title: \"Lets do it!\" },\n    { id: 2, title: \"All done!\" }\n  ];\n\n  expect(distinct(todos, \"id\").length).toEqual(2);\n  expect(distinct(todos2, \"id\").length).toEqual(2);\n\n ```\n */\nexport function distinct<E, K extends keyof E>(entities: E[], property: K): E[] {\n  const entitiesByProperty = new Map(entities.map(e => [e[property], e] as [E[K], E]));\n  return Array.from(entitiesByProperty.values());\n}\n\n/**\n * Returns true if all the entities are distinct by the \n * `property` value argument.\n * \n * @param property The name of the property to check for distinct values by.\n * @param entities The entities in the array.\n * \n * @example\n * \n ```\n  let todos: Todo[] = [\n    { id: 1, title: \"Lets do it!\" },\n    { id: 1, title: \"Lets do it again!\" },\n    { id: 2, title: \"All done!\" }\n  ];\n\n  let todos2: Todo[] = [\n    { id: 1, title: \"Lets do it!\" },\n    { id: 2, title: \"All done!\" }\n  ];\n\n  expect(unique(todos, \"id\")).toBeFalsy();\n  expect(unique(todos2, \"id\")).toBeTruthy();\n ```\n */\nexport function unique<E>(entities: E[], property: keyof E):boolean {\n  return entities.length == distinct(entities, property).length ? true : false;\n}\n\n/**\n * Create a global ID\n * @return The global id.\n * \n * @example\n * let e.guid = GUID();\n */\nexport function GUID() {\n  return nanoid();\n}\n\n/**\n * Set the global identfication property on the instance.\n * \n * @param e Entity we want to set the global identifier on.\n * @param gid The name of the `gid` property.  If not specified it defaults to `ESTORE_CONFIG_DEFAULT.guidKey`.\n */\nexport function attachGUID<E>(e: E, gid?: string): string {\n  const guidKey = gid ? gid : ESTORE_CONFIG_DEFAULT.guidKey\n  let id: string = nanoid();\n  (<any>e)[guidKey] = id\n  return id\n}\n\n/**\n * Set the global identfication property on the instance.\n * \n * @param e[] Entity array we want to set the global identifiers on.\n * @param gid The name of the `gid` property.  If not specified it defaults to `gid`.\n */\nexport function attachGUIDs<E>(e: E[], gid?: string) {\n  e.forEach(e => {\n    attachGUID(e, gid);\n  });\n}\n\n/**\n * Create a shallow copy of the argument.\n * @param o The object to copy\n */\nexport function shallowCopy<E>(o: E) {\n  return { ...o };\n}\n\n/**\n * Create a deep copy of the argument.\n * @param o The object to copy\n */\nexport function deepCopy<E>(o: E) {\n  return JSON.parse(JSON.stringify(o));\n}\n\n/**\n * Gets the current active value from the `active`\n * Map.  \n * \n * This is used for the scenario where we are managing\n * a single active instance.  For example \n * when selecting a book from a collection of books.  \n * \n * The selected `Book` instance becomes the active value.\n * \n * @example\n * const book:Book = getActiveValue(bookStore.active);\n * @param m \n */\nexport function getActiveValue<E>(m: Map<any, E>) {\n  if (m.size) {\n    return m.entries().next().value[1];\n  }\n  return null;\n}\n\n/**\n * The method can be used to exclude keys from an instance\n * of type `E`.  \n * \n * We can use this to exclude values when searching an object.\n * \n * @param entity An instance of type E\n * @param exclude The keys to exclude\n * \n * @example\n * todo = { id: '1', description: 'Do it!' }\n * let keys = excludeKeys<Todo>(todo, ['id]);\n * // keys = ['description']\n */\nexport function excludeKeys<E>(entity: E, exclude: string[]) {\n  const keys: string[] = Object.keys(entity);\n  return keys.filter((key) => {\n    return exclude.indexOf(key) < 0;\n  });\n}\n\n/**\n * \n * @param entities The entity to search\n * @param exclude Keys to exclude from each entity\n * \n * @return E[] Array of entities with properties containing the search term.\n */\nexport function search<E>(query: string = '', entities: E[], exclude: string[] = []): E[] {\n  const { isArray } = Array\n\n  query = query.toLowerCase();\n\n\n  return entities.filter(function (e: E) {\n    //Do the keys calculation on each instance e:E\n    //because an instance can have optional parameters,\n    //and thus we have to check each instance, not just\n    //the first one in the array.\n    const keys = excludeKeys(e, exclude)\n    return keys.some( (key) => {\n      const value = (e as any)[key];\n      if (!value) {\n        return false;\n      }\n      if (isArray(value)) {\n        return value.some(v => {\n          return String(v).toLowerCase().includes(query);\n        });\n      }\n      else {\n        return String(value).toLowerCase().includes(query);\n      }\n    })\n  });\n}\n\n/**\n * @param scrollable The element being scrolled\n * @param debounceMS The number of milliseconds to debounce scroll events\n * @param sp The function returning the scroll position coordinates.\n * @return A boolean valued observable indicating whether the element is scrolling up or down\n */\nexport function scrollingUp(\n  scrollable: any, \n  debounceMS: number, \n  sp: scrollPosition): Observable<boolean> {\n  return fromEvent(scrollable, 'scroll').pipe(\n    debounceTime(debounceMS), \n    distinctUntilChanged(), \n    map(v => sp()), \n    pairwise(), \n    switchMap(p => {\n    const y1 = p[0][1]\n    const y2 = p[1][1]\n    return y1 - y2 > 0 ? of(false) : of(true)\n  }))\n}\n\n/**\n * Filters the entities properties to the set contained in the \n * `keys` array.\n *  \n * @param keys The array of keys that the entity be limited to\n * @param entity The entity to map\n * @return An entity instance that has only the keys provided in the keys array \n */\nexport function mapEntity(keys:string[], entity:any) {\n  const result:any = {}\n  keys.forEach(k=>{\n    result[k] = entity[k]\n  })\n  return result\n}","import { Delta, ActionTypes, Predicate } from \"./models\"\nimport { AbstractStore } from \"./AbstractStore\"\nimport { EStore } from \"./EStore\";\n\nconst { isArray } = Array\n\nexport class Slice<E> extends AbstractStore<E> {\n\n\n    /* The slice element entries */\n    public entries: Map<string, E> = new Map();\n\n    /**\n     * perform initial notification to all observers,\n     * such that operations like {@link combineLatest}{}\n     * will execute at least once.\n     * \n     * @param label The slice label\n     * @param predicate The slice predicate\n     * @param eStore The EStore instance containing the elements considered for slicing\n     * \n     * @example \n       <pre>\n       //Empty slice\n       new Slice<Todo>(Todo.COMPLETE, todo=>!todo.complete);\n  \n       //Initialized slice\n       let todos = [new Todo(false, \"You complete me!\"), \n                    new Todo(true, \"You completed me!\")];\n       new Slice<Todo>(Todo.COMPLETE, todo=>!todo.complete, todos);\n       </pre>\n     */\n    constructor(\n        public label: string,\n        public predicate: Predicate<E>,\n        public eStore: EStore<E>) {\n        super();\n        const entities: E[] = eStore.allSnapshot()\n        this.config = eStore.config\n        let passed: E[] = this.test(predicate, entities);\n        const delta: Delta<E> = { type: ActionTypes.INTIALIZE, entries: passed };\n        this.post(passed);\n        this.notifyDelta.next(delta)\n    }\n\n    /**\n     * Add the element if it satisfies the predicate\n     * and notify subscribers that an element was added.\n     *\n     * @param e The element to be considered for slicing\n     */\n    post(e: E | E[]) {\n        if (isArray(e)) {\n            this.postA(e)\n        }\n        else {\n            if (this.predicate(e)) {\n                const id = (<any>e)[this.config.guidKey];\n                this.entries.set(id, e);\n                const delta: Delta<E> = { type: ActionTypes.POST, entries: [e] };\n                this.notifyAll([...Array.from(this.entries.values())], delta);\n            }\n        }\n    }\n\n    /**\n     * Add the elements if they satisfy the predicate\n     * and notify subscribers that elements were added.\n     *\n     * @param e The element to be considered for slicing\n     */\n    postN(...e: E[]) {\n        this.postA(e);\n    }\n\n    /**\n     * Add the elements if they satisfy the predicate\n     * and notify subscribers that elements were added.\n     *\n     * @param e The element to be considered for slicing\n     */\n    postA(e: E[]) {\n        const d: E[] = [];\n        e.forEach(e => {\n            if (this.predicate(e)) {\n                const id = (<any>e)[this.config.guidKey];\n                this.entries.set(id, e);\n                d.push(e);\n            }\n        });\n        const delta: Delta<E> = { type: ActionTypes.POST, entries: d };\n        this.notifyAll([...Array.from(this.entries.values())], delta);\n    }\n\n    /**\n     * Delete an element from the slice.\n     *\n     * @param e The element to be deleted if it satisfies the predicate\n     */\n    delete(e: E | E[]) {\n        if (isArray(e)) {\n            this.deleteA(e)\n        }\n        else {\n            if (this.predicate(e)) {\n                const id = (<any>e)[this.config.guidKey]\n                this.entries.delete(id)\n                const delta: Delta<E> = { type: ActionTypes.DELETE, entries: [e] }\n                this.notifyAll(Array.from(this.entries.values()), delta)\n            }\n        }\n    }\n\n    /**\n     * @param e The elements to be deleted if it satisfies the predicate\n     */\n    deleteN(...e: E[]) {\n        this.deleteA(e);\n    }\n\n    /**\n     * @param e The elements to be deleted if they satisfy the predicate\n     */\n    deleteA(e: E[]) {\n        const d: E[] = []\n        e.forEach(e => {\n            if (this.predicate(e)) {\n                const id = (<any>e)[this.config.guidKey]\n                d.push(this.entries.get(id)!)\n                this.entries.delete(id)\n            }\n        });\n        const delta: Delta<E> = { type: ActionTypes.DELETE, entries: d };\n        this.notifyAll([...Array.from(this.entries.values())], delta);\n    }\n\n    /**\n     * Update the slice when an Entity instance mutates.\n     *\n     * @param e The element to be added or deleted depending on predicate reevaluation\n     */\n    put(e: E | E[]) {\n        if (isArray(e)) {\n            this.putA(e)\n        }\n        else {\n            const id = (<any>e)[this.config.guidKey];\n            if (this.entries.get(id)) {\n                if (!this.predicate(e)) {\n                    //Note that this is a ActionTypes.DELETE because we are removing the\n                    //entity from the slice.\n                    const delta: Delta<E> = { type: ActionTypes.DELETE, entries: [e] };\n                    this.entries.delete(id);\n                    this.notifyAll([...Array.from(this.entries.values())], delta);\n                }\n            } else if (this.predicate(e)) {\n                this.entries.set(id, e);\n                const delta: Delta<E> = { type: ActionTypes.PUT, entries: [e] };\n                this.notifyAll([...Array.from(this.entries.values())], delta);\n            }    \n        }\n    }\n\n    /**\n     * Update the slice with mutated Entity instances.\n     *\n     * @param e The elements to be deleted if it satisfies the predicate\n     */\n    putN(...e: E[]) {\n        this.putA(e);\n    }\n\n    /**\n     * @param e The elements to be put\n     */\n    putA(e: E[]) {\n        const d: E[] = []; //instances to delete\n        const u: E[] = []; //instances to update\n        e.forEach(e => {\n            const id = (<any>e)[this.config.guidKey];\n            if (this.entries.get(id)) {\n                if (!this.predicate(e)) {\n                    d.push(this.entries.get(id)!);\n                }\n            } else if (this.predicate(e)) {\n                u.push(e);\n            }\n        });\n        if (d.length > 0) {\n            d.forEach(e => {\n                this.entries.delete((<any>e)[this.config.guidKey])\n            });\n            const delta: Delta<E> = { type: ActionTypes.DELETE, entries: d };\n            this.notifyAll([...Array.from(this.entries.values())], delta);\n        }\n        if (u.length > 0) {\n            u.forEach(e => {\n                this.entries.set((<any>e)[this.config.guidKey], e);\n            });\n            const delta: Delta<E> = { type: ActionTypes.PUT, entries: u };\n            this.notifyAll([...Array.from(this.entries.values())], delta);\n        }\n    }\n\n    /**\n     * Resets the slice to empty.\n     */\n    reset() {\n        let delta: Delta<E> = {\n            type: ActionTypes.RESET,\n            entries: [...Array.from(this.entries.values())]\n        };\n        this.notifyAll([], delta);\n        this.entries = new Map();\n    }\n\n    /**\n     * Utility method that applies the predicate to an array\n     * of entities and return the ones that pass the test.\n     *\n     * Used to create an initial set of values\n     * that should be part of the `Slice`.\n     *\n     * @param p\n     * @param e\n     * @return The the array of entities that pass the predicate test.\n     */\n    public test(p: Predicate<E>, e: E[]): E[] {\n        let v: E[] = [];\n        e.forEach((e: E) => {\n            if (p(e)) {\n                v.push(e);\n            }\n        });\n        return v;\n    }\n}\n","import { AbstractStore } from './AbstractStore';\nimport { StoreConfig } from './models/StoreConfig';\nimport { GUID } from './utilities';\n\nimport { ActionTypes, Predicate, Delta } from './models/';\nimport { ReplaySubject, of, Observable } from 'rxjs';\nimport { takeWhile, filter, switchMap } from 'rxjs/operators';\nimport { Slice } from './Slice';\n\n/**\n * This `todoFactory` code will be used to illustrate the API examples.  The following\n * utilities are used in the tests and the API Typedoc examples contained here.\n * @example Utilities for API Examples\n```\nexport const enum TodoSliceEnum {\n  COMPLETE = \"Complete\",\n  INCOMPLETE = \"Incomplete\"\n}\n\nexport class Todo {\n  constructor(public complete: boolean, public title: string,public gid?:string, public id?:string) {}\n}\n\nexport let todos = [new Todo(false, \"You complete me!\"), new Todo(true, \"You completed me!\")];\n\nexport function todosFactory():Todo[] {\n  return [new Todo(false, \"You complete me!\"), new Todo(true, \"You completed me!\")];\n}\n ``` \n */\n\nexport class EStore<E> extends AbstractStore<E> {\n  /**\n   * Store constructor (Initialization with element is optional)\n   *\n   * perform initial notification to all observers,\n   * such that function like {@link combineLatest}{}\n   * will execute at least once.\n   * @param entities\n   * @example Dynamic `EStore<Todo>` Creation \n```\n// Initialize the Store\nlet store: EStore<Todo> = new EStore<Todo>(todosFactory());\n```*/\n  constructor(entities: E[] = [], config?: StoreConfig) {\n    super(config);\n    const delta: Delta<E> = { type: ActionTypes.INTIALIZE, entries: entities };\n    this.post(entities)\n    this.notifyDelta.next(delta);\n  }\n\n  /**\n   * Calls complete on all {@link BehaviorSubject} instances.\n   * \n   * Call destroy when disposing of the store.\n   */\n  destroy() {\n    super.destroy()\n    this.notifyLoading.complete()\n    this.notifyActive.complete()\n    this.slices.forEach(slice => slice.destroy())\n  }\n\n  /**\n   * Toggles the entity:\n   * \n   * If the store contains the entity\n   * it will be deleted.  If the store \n   * does not contains the entity,\n   * it is added.\n   * @param e \n   * @example Toggle the `Todo` instance\n```\nestore.post(todo);\n// Remove todo\nestore.toggle(todo);\n// Add it back\nestore.toggle(todo);\n\n```\n   */\n  public toggle(e: E) {\n    if (this.contains(e)) {\n      this.delete(e);\n    } else {\n      this.post(e);\n    }\n  }\n\n  /**\n   * An Observable<E[]> reference so that \n   * \n   */\n  public observable: Observable<E[]> = this.observe()\n\n  /**\n   * Notifies observers when the store is empty.\n   */\n  private notifyActive = new ReplaySubject<Map<string, E>>(1);\n\n\n  /**\n   * `Map` of active entties. The instance is public and can be used\n   * directly to add and remove active entities, however we recommend\n   * using the {@link addActive} and {@link deleteActive} methods.\n   */\n  public active: Map<string, E> = new Map();\n\n  /**\n   * Add multiple entity entities to active.\n   * \n   * If the entity is not contained in the store it is added\n   * to the store before it is added to `active`.\n   * \n   * Also we clone the map prior to broadcasting it with\n   * `notifyActive` to make sure we will trigger Angular \n   * change detection in the event that it maintains \n   * a reference to the `active` state `Map` instance.\n   * \n   * @example Add a `todo1` and `todo2` as active\n```\naddActive(todo1);\naddActive(todo2);\n```\n   */\n  public addActive(e: E) {\n    if (this.contains(e)) {\n      this.active.set((<any>e).gid, e);\n      this.notifyActive.next(new Map(this.active));\n    }\n    else {\n      this.post(e);\n      this.active.set((<any>e).gid, e);\n      this.notifyActive.next(new Map(this.active));\n    }\n  }\n\n  /**\n   * Delete an entity as active.\n   * \n   * Also we clone the map prior to broadcasting it with\n   * `notifyActive` to make sure we will trigger Angular \n   * change detection in the event that it maintains \n   * a reference to the `active` state `Map` instance.\n   * \n   * @example Mark a `todo` instance as active\n  ```\ndeleteActive(todo1);\ndeleteActive(todo2);\n  ```\n   */\n  public deleteActive(e: E) {\n    this.active.delete((<any>e).gid);\n    this.notifyActive.next(new Map(this.active));\n  }\n\n  /**\n   * Clear / reset the active entity map.\n   * \n   * Also we clone the map prior to broadcasting it with\n   * `notifyActive` to make sure we will trigger Angular \n   * change detection in the event that it maintains \n   * a reference to the `active` state `Map` instance.\n   * \n   * @example Mark a `todo` instance as active\n  ```\ndeleteActive(todo1);\ndeleteActive(todo2);\n  ```\n   */\n  clearActive() {\n    this.active.clear();\n    this.notifyActive.next(new Map(this.active));\n  }\n\n  /**\n   * Observe the active entity.\n   * @example\n     <pre>\n    let active$ = source.observeActive();\n    </pre>\n  */\n  public observeActive() {\n    return this.notifyActive.asObservable()\n  }\n\n\n  //================================================\n  // LOADING\n  //================================================\n\n  /**\n   * Observable of errors occurred during a load request.\n   * \n   * The error Observable should be created by the \n   * client.\n   */\n  public loadingError!: Observable<any>;\n\n  /**\n   * Notifies observers when the store is loading.\n   * \n   * This is a common pattern found when implementing\n   * `Observable` data sources.\n   */\n  private notifyLoading = new ReplaySubject<boolean>(1);\n\n  /**\n   * The current loading state.  Use loading when fetching new\n   * data for the store.  The default loading state is `true`.\n   * \n   * This is such that if data is fetched asynchronously \n   * in a service, components can wait on loading notification\n   * before attempting to retrieve data from the service.\n   *\n   * Loading could be based on a composite response.  For example\n   * when the stock and mutual funds have loaded, set loading to `false`.\n   */\n  private _loading: boolean = true;\n\n  /**\n   * Sets the current loading state and notifies observers.\n   */\n  set loading(loading: boolean) {\n    this._loading = loading;\n    this.notifyLoading.next(this._loading);\n  }\n\n  /**\n   * @return A snapshot of the loading state.\n   */\n  get loading() {\n    return this._loading;\n  }\n\n  /**\n   * Observe loading.\n   * @example\n     <pre>\n    let loading$ = source.observeLoading();\n    </pre>\n\n    Note that this obverable piped through\n    `takeWhile(v->v, true), such that it will \n    complete after each emission.\n\n    See:\n    https://medium.com/@ole.ersoy/waiting-on-estore-to-load-8dcbe161613c\n\n    For more details.\n  */\n  public observeLoading() {\n    return this.notifyLoading.asObservable().\n      pipe(takeWhile(v => v, true));\n  }\n\n  /**\n   * Notfiies when loading has completed.\n   */\n  public observeLoadingComplete() {\n    return this.observeLoading().pipe(\n      filter(loading => loading == false),\n      switchMap(() => of(true)))\n  }\n\n\n\n\n\n\n  //================================================\n  // SEARCHING\n  //================================================\n  /**\n   * Observable of errors occurred during a search request.\n   * \n   * The error Observable should be created by the \n   * client.\n   */\n  public searchError!: Observable<any>;\n\n  /**\n   * Notifies observers that a search is in progress.\n   * \n   * This is a common pattern found when implementing\n   * `Observable` data sources.\n   */\n  private notifySearching = new ReplaySubject<boolean>(1);\n\n  /**\n   * The current `searching` state.  Use `searching`\n   * for example to display a spinnner \n   * when performing a search.  \n   * The default `searching` state is `false`.\n   */\n  private _searching: boolean = false;\n\n  /**\n   * Sets the current searching state and notifies observers.\n   */\n  set searching(searching: boolean) {\n    this._searching = searching;\n    this.notifySearching.next(this._searching);\n  }\n\n  /**\n   * @return A snapshot of the searching state.\n   */\n  get searching() {\n    return this._searching;\n  }\n\n  /**\n   * Observe searching.\n   * @example\n     <pre>\n    let searching$ = source.observeSearching();\n    </pre>\n  \n    Note that this obverable piped through\n    `takeWhile(v->v, true), such that it will \n    complete after each emission.\n  \n    See:\n    https://medium.com/@ole.ersoy/waiting-on-estore-to-load-8dcbe161613c\n  \n    For more details.\n  */\n  public observeSearching(): Observable<boolean> {\n    return this.notifySearching.asObservable().\n      pipe(takeWhile(v => v, true));\n  }\n\n  /**\n   * Notfiies when searching has completed.\n   */\n  public observeSearchingComplete(): Observable<boolean> {\n    return this.observeSearching().pipe(\n      filter(searching => searching == false),\n      switchMap(() => of(true)))\n  }\n\n\n\n\n\n\n\n  /**\n   * Store slices\n   */\n  private slices: Map<string, Slice<E>> = new Map();\n\n  /**\n   * Adds a slice to the store and keys it by the slices label.\n   *\n   * @param p\n   * @param label\n   * \n   * @example Setup a Todo Slice for COMPLETE Todos\n```\nsource.addSlice(todo => todo.complete, TodoSlices.COMPLETE);\n```\n   */\n  addSlice(p: Predicate<E>, label: string) {\n    const slice: Slice<E> = new Slice(\n      label,\n      p,\n      this)\n    this.slices.set(slice.label, slice)\n  }\n\n  /**\n   * Remove a slice\n   * @param label The label identifying the slice\n   * \n   * @example Remove the TodoSlices.COMPLETE Slice\n```\nsource.removeSlice(TodoSlices.COMPLETE);\n```\n   */\n  removeSlice(label: string) {\n    this.slices.delete(label);\n  }\n\n  /**\n   * Get a slice\n   * @param label The label identifying the slice\n   * @return The Slice instance or undefined \n   * \n   * @example Get the TodoSlices.COMPLETE slice\n```\nsource.getSlice(TodoSlices.COMPLETE);\n```\n   */\n  getSlice(label: string): Slice<E> | undefined {\n    return this.slices.get(label);\n  }\n\n  /**\n   * Post (Add a new) element(s) to the store.\n   * @param e An indiidual entity or an array of entities\n   * @example Post a `todo`.\n```\nstore.post(todo);\n```\n   */\n  post(e: E | E[]) {\n    if (!Array.isArray(e)) {\n      const guid: string = (<any>e)[this.GUID_KEY]\n        ? (<any>e)[this.GUID_KEY]\n        : GUID();\n      (<any>e)[this.GUID_KEY] = guid;\n      this.entries.set(guid, e);\n      this.updateIDEntry(e);\n      Array.from(this.slices.values()).forEach(s => {\n        s.post(e);\n      });\n      //Create a new array reference to trigger Angular change detection.\n      let v: E[] = [...Array.from(this.entries.values())];\n      const delta: Delta<E> = { type: ActionTypes.POST, entries: [e] };\n      this.notifyAll(v, delta);\n    }\n    else {\n      this.postA(e)\n    }\n  }\n\n  /**\n   * Post elements to the store.\n   * @param ...e\n   * @example Post two `Todo` instances.\n```\nstore.post(todo1, todo2);\n```\n   */\n  postN(...e: E[]) {\n    e.forEach(e => {\n      const guid: string = (<any>e)[this.GUID_KEY]\n        ? (<any>e)[this.GUID_KEY]\n        : GUID();\n      (<any>e)[this.GUID_KEY] = guid;\n      this.entries.set(guid, e);\n      this.updateIDEntry(e);\n    });\n    Array.from(this.slices.values()).forEach(s => {\n      s.postA(e);\n    });\n    //Create a new array reference to trigger Angular change detection.\n    let v: E[] = [...Array.from(this.entries.values())];\n    const delta: Delta<E> = { type: ActionTypes.POST, entries: e };\n    this.notifyAll(v, delta);\n  }\n\n  /**\n   * Post (Add) an array of elements to the store.\n   * @param e\n   * @example Post a `Todo` array.\n```\nstore.post([todo1, todo2]);\n```\n   */\n  postA(e: E[]) {\n    this.postN(...e);\n  }\n\n  /**\n   * Put (Update) an element.\n   * @param e\n   * @example Put a Todo instance.\n```\nstore.put(todo1);\n```\n   */\n  put(e: E | E[]) {\n    if (!Array.isArray(e)) {\n      let id: string = (<any>e)[this.GUID_KEY];\n      this.entries.set(id, e);\n      this.updateIDEntry(e);\n      let v: E[] = [...Array.from(this.entries.values())];\n      this.notify.next(v);\n      const delta: Delta<E> = { type: ActionTypes.PUT, entries: [e] };\n      this.notifyDelta.next(delta);\n      Array.from(this.slices.values()).forEach(s => {\n        s.put(e);\n      });\n    }\n    else {\n      this.putA(e)\n    }\n  }\n\n  /**\n   * Put (Update) an element or add an element that was read from a persistence source\n   * and thus already has an assigned global id`.\n   * @param e\n   * @example Put Todo instances.\n```\nstore.put(todo1, todo2);\n```\n   */\n  putN(...e: E[]) {\n    this.putA(e);\n  }\n\n  /**\n   * Put (Update) the array of elements.\n   * @param e\n   * @example Put Todo instances.\n```\nstore.put([todo1, todo2]);\n```\n   */\n  putA(e: E[]) {\n    e.forEach(e => {\n      let guid: string = (<any>e)[this.GUID_KEY]\n      this.entries.set(guid, e)\n      this.updateIDEntry(e);\n    });\n    //Create a new array reference to trigger Angular change detection.\n    let v: E[] = [...Array.from(this.entries.values())];\n    this.notify.next(v);\n    const delta: Delta<E> = { type: ActionTypes.PUT, entries: e };\n    this.notifyDelta.next(delta);\n    Array.from(this.slices.values()).forEach(s => {\n      s.putA(e);\n    });\n  }\n\n  /**\n   * Delete (Update) the array of elements.\n   * @param e\n   * @example Delete todo1.\n```\nstore.delete(todo1]);\n```\n   */\n  delete(e: E | E[]) {\n    if (!Array.isArray(e)) {\n      this.deleteActive(e);\n      const guid = (<any>e)[this.GUID_KEY];\n      this.entries.delete(guid);\n      this.deleteIDEntry(e);\n      Array.from(this.slices.values()).forEach(s => {\n        s.entries.delete(guid);\n      });\n      //Create a new array reference to trigger Angular change detection.\n      let v: E[] = [...Array.from(this.entries.values())];\n      const delta: Delta<E> = { type: ActionTypes.DELETE, entries: [e] };\n      this.notifyAll(v, delta);\n      Array.from(this.slices.values()).forEach(s => {\n        s.delete(e);\n      });\n    }\n    else {\n      this.deleteA(e)\n    }\n\n  }\n\n  /**\n   * Delete N elements.\n   * @param ...e\n   * @example Put Todo instances.\n```\nstore.delete(todo1, todo2);\n```\n   */\n  deleteN(...e: E[]) {\n    this.deleteA(e);\n  }\n\n  /**\n   * Delete N elements.\n   * @param ...e\n   * @example Put Todo instances.\n```\nstore.delete(todo1, todo2);\n```\n   */\n  deleteA(e: E[]) {\n    e.forEach(e => {\n      this.deleteActive(e);\n      const guid = (<any>e)[this.GUID_KEY];\n      this.entries.delete(guid);\n      this.deleteIDEntry(e);\n      Array.from(this.slices.values()).forEach(s => {\n        s.entries.delete(guid);\n      });\n    });\n    //Create a new array reference to trigger Angular change detection.\n    let v: E[] = [...Array.from(this.entries.values())];\n    const delta: Delta<E> = { type: ActionTypes.DELETE, entries: e };\n    this.notifyAll(v, delta);\n    Array.from(this.slices.values()).forEach(s => {\n      s.deleteA(e);\n    });\n  }\n\n  /**\n   * Delete elements by {@link Predicate}.\n   * @param p The predicate.\n   * @example Put Todo instances.\n```\nstore.delete(todo1, todo2);\n```\n   */\n  deleteP(p: Predicate<E>) {\n    const d: E[] = [];\n    Array.from(this.entries.values()).forEach(e => {\n      if (p(e)) {\n        d.push(e);\n        const id = (<any>e)[this.GUID_KEY];\n        this.entries.delete(id);\n        this.deleteActive(e);\n        this.deleteIDEntry(e);\n      }\n    });\n    //Create a new array reference to trigger Angular change detection.\n    let v: E[] = [...Array.from(this.entries.values())];\n    const delta: Delta<E> = { type: ActionTypes.DELETE, entries: d };\n    this.notifyAll(v, delta);\n    Array.from(this.slices.values()).forEach(s => {\n      s.deleteA(d);\n    });\n  }\n\n  /**\n   * If the entity has the `id` key initialized with a value,\n   * then also add the entity to the `idEntries`.\n   *\n   * @param e The element to be added to the `idEntries`.\n   */\n  private updateIDEntry(e: E) {\n    if ((<any>e)[this.ID_KEY]) {\n      this.idEntries.set((<any>e)[this.ID_KEY], e);\n    }\n  }\n\n  /**\n   * If the entity has the `id` key initialized with a value,\n   * then also delete the entity to the `idEntries`.\n   *\n   * @param e The element to be added to the `idEntries`.\n   */\n  private deleteIDEntry(e: E) {\n    if ((<any>e)[this.ID_KEY]) {\n      this.idEntries.delete((<any>e)[this.ID_KEY]);\n    }\n  }\n\n  /**\n   * Resets the store and all contained slice instances to empty.\n   * Also perform delta notification that sends all current store entries.\n   * The ActionType.RESET code is sent with the delta notification.  Slices\n   * send their own delta notification.\n   * \n   * @example Reset the store.\n```\nstore.reset();\n```\n   */\n  reset() {\n    const delta: Delta<E> = {\n      type: ActionTypes.RESET,\n      entries: Array.from(this.entries.values())\n    };\n    this.notifyAll([], delta);\n    this.entries = new Map();\n    Array.from(this.slices.values()).forEach(s => {\n      s.reset();\n    });\n  }\n\n  /**\n   * Call all the notifiers at once.\n   *\n   * @param v\n   * @param delta\n   */\n  protected notifyAll(v: E[], delta: Delta<E>) {\n    super.notifyAll(v, delta);\n    this.notifyLoading.next(this.loading);\n  }\n}","import { ReplaySubject, Observable } from 'rxjs'\n\n/**\n * Initialize hte store with this.\n */\nexport interface ValueReset {\n    value: any\n    reset?: any\n}\n\n/**\n * OStore Key Value Reset\n */\nexport interface ObsValueReset {\n    value: any\n    reset?: any\n    obs: Observable<any>\n}\n\nexport interface KeyObsValueReset {\n    [key: string]: ObsValueReset\n}\n\nexport interface OStoreStart {\n    [key: string]: ValueReset\n}\n\nexport class OStore<E extends KeyObsValueReset> {\n    /**\n     * Start keys and values\n     * passed in via constructor.\n     */\n    public S!: E\n\n    constructor(start: OStoreStart) {\n        if (start) {\n            this.S = <any>start;\n            const keys = Object.keys(start)\n            keys.forEach((k) => {\n                const ovr = start[k] as ObsValueReset\n                this.post(ovr, ovr.value)\n                ovr.obs = this.observe(ovr)\n            })\n        }\n    }\n\n    /**\n     * Reset the state of the OStore to the\n     * values or reset provided in the constructor\n     * {@link OStoreStart} instance.\n     */\n    public reset() {\n        if (this.S) {\n            const keys = Object.keys(this.S)\n            keys.forEach((k) => {\n                const ovr: ObsValueReset = this.S[k]\n                this.put(ovr, ovr.reset ? ovr.reset : ovr.value)\n            })\n        }\n    }\n\n    /**\n     * Clear all entries\n     */\n    public clear() {\n        this.entries.clear()\n    }\n\n\n    /**\n     * Map of Key Value pair entries\n     * containing values store in this store.\n     */\n    public entries: Map<any, any> = new Map()\n\n    /**\n     * Map of replay subject id to `ReplaySubject` instance.\n     */\n    private subjects: Map<any, ReplaySubject<any>> = new Map()\n\n    /**\n     * Set create a key value pair entry and creates a \n     * corresponding replay subject instance that will\n     * be used to broadcast updates.\n     * \n     * @param key The key identifying the value\n     * @param value The value\n     */\n    public post(key: any, value: any) {\n        this.entries.set(key, value)\n        this.subjects.set(key, new ReplaySubject(1))\n        //Emit immediately so that Observers can receive \n        //the value straight away.\n        const subject = this.subjects.get(key)\n        if (subject) {\n            subject.next(value)\n        }\n    }\n    /**\n     * Update a value and notify subscribers.\n     * \n     * @param key \n     * @param value \n     */\n    public put(key: any, value: any) {\n        this.entries.set(key, value)\n        const subject = this.subjects.get(key)\n        if (subject) {\n            subject.next(value)\n        }\n    }\n\n    /**\n     * Deletes both the value entry and the corresponding {@link ReplaySubject}.\n     * Will unsubscribe the {@link ReplaySubject} prior to deleting it,\n     * severing communication with corresponding {@link Observable}s.\n     *  \n     * @param key \n     */\n    public delete(key: any) {\n        this.entries.delete(key)\n        this.subjects.delete(key)\n        const subject = this.subjects.get(key)\n        if (subject) {\n            subject.unsubscribe()\n        }\n    }\n\n    /**\n     * Observe changes to the values.\n     * \n     * @param key \n     * @return An {@link Observable} of the value\n     */\n    public observe(key: any) {\n        return this.subjects.get(key)!.asObservable()\n    }\n\n    /**\n      * Check whether a value exists.\n      * \n      * @param key \n      * @return True if the entry exists ( Is not null or undefined ) and false otherwise.\n      */\n    public exists(key: any): boolean {\n        return this.entries.get(key) != null\n    }\n\n    /**\n     * Retrieve a snapshot of the \n     * value.\n     *  \n     * @param key \n     * @return A snapshot of the value corresponding to the key.\n     */\n    public snapshot(key: any): any {\n        return this.entries.get(key)\n    }\n\n    /**\n     * Indicates whether the store is empty.\n     * @return true if the store is empty, false otherwise.\n     */\n    public isEmpty() {\n        return Array.from(this.entries.values()).length == 0\n    }\n\n    /**\n     * Returns the number of key value pairs contained.\n     * \n     * @return the number of entries in the store.\n     */\n    public count() {\n        return Array.from(this.entries.values()).length\n    }\n}","/*\n * Public API Surface of slice\n */\nexport * from './lib/models/'\nexport * from './lib/AbstractStore'\nexport * from './lib/EStore'\nexport * from './lib/OStore'\nexport * from './lib/Slice'\nexport * from './lib/utilities'\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ReplaySubject","map","nanoid","fromEvent","debounceTime","distinctUntilChanged","pairwise","switchMap","of","takeWhile","filter"],"mappings":";;;;;;EAOC;;ECND;;;;;MAIA;OAGC;mBAAA;GAAA;;MCRY,0BAA0B,GAAG,GAAG;MAChC,wBAAwB,GAAG;;ECIhC,IAAA,MAAM,GAAK,MAAM,OAAX,CAAW;EAEzB,IAAM,qBAAqB,GAAG,IAAI,CAAA;EAClC,IAAM,sBAAsB,GAAG,KAAK,CAAA;MAEvB,qBAAqB,GAAgB,MAAM,CAAC;MACvD,KAAK,EAAE,qBAAqB;MAC5B,OAAO,EAAE,sBAAsB;GAChC,EAAE;;MASA,uBAAY,MAAoB;;;;UASvB,gBAAW,GAAG,IAAIA,kBAAa,CAAS,CAAC,CAAC,CAAC;;;;UAK3C,WAAM,GAAW,EAAE,CAAC;;;;UA+CvB,YAAO,GAAmB,IAAI,GAAG,EAAE,CAAA;;;;;UAMnC,cAAS,GAAmB,IAAI,GAAG,EAAE,CAAA;;;;;UAMlC,WAAM,GAAG,IAAIA,kBAAa,CAAM,CAAC,CAAC,CAAA;;;;;UAMlC,gBAAW,GAAG,IAAIA,kBAAa,CAAW,CAAC,CAAC,CAAA;UA9EnD,IAAI,CAAC,MAAM,GAAG,MAAM;gBAChB,MAAM,iCAAM,qBAAqB,GAAK,MAAM,EAAG;gBAC/C,qBAAqB,CAAC;OAC3B;MAeF,sBAAI,gCAAK;;;;eAQT;cACE,OAAO,IAAI,CAAC,MAAM,CAAC;WACpB;;;;eAVD,UAAU,KAAa;cACrB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;cACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;WACpC;;;SAAA;;;;;;;;MAgBM,oCAAY,GAAZ;UACL,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;OACxC;MAOD,sBAAI,iCAAM;;;;;eAAV;cACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAA;WACzB;;;SAAA;MAKD,sBAAI,mCAAQ;;;;;eAAZ;cACE,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAA;WAC3B;;;SAAA;;;;;;;MA+BS,iCAAS,GAAT,UAAU,CAAM,EAAE,KAAe;UACzC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACpB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;OAC9B;;;;;;;;;;;MAYM,+BAAO,GAAP,UAAQ,IAAiC;UAC9C,IAAI,IAAI,EAAE;cACR,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAACC,aAAG,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,CAAC;WACxD;UACD,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;OACnC;;;;;;;;MASM,oCAAY,GAAZ;UACL,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;OACxC;;;;;;;;;;;MAYD,+BAAO,GAAP;UACE,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrBA,aAAG,CAAC,UAAC,OAAY,IAAK,OAAA,OAAO,CAAC,MAAM,IAAI,CAAC,GAAA,CAAC,CAC3C,CAAC;OACH;;;;;;;;;;;MAYD,uCAAe,GAAf;UACE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;OACtD;;;;;MAMD,6BAAK,GAAL,UAAM,CAAgB;UACpB,IAAI,CAAC,EAAE;cACL,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CACrBA,aAAG,CAAC,UAAC,CAAM,IAAK,OAAA,CAAC,CAAC,MAAM,CAAC,UAAC,KAAK,EAAE,CAAC,IAAK,OAAA,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAA,EAAE,CAAC,CAAC,GAAA,CAAC,CACnE,CAAC;WACH;UACD,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAACA,aAAG,CAAC,UAAC,OAAY,IAAK,OAAA,OAAO,CAAC,MAAM,GAAA,CAAC,CAAC,CAAC;OAChE;;;;;MAMD,qCAAa,GAAb,UAAc,CAAgB;UAC5B,IAAI,CAAC,EAAE;cACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;WAC3D;UACD,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC;OACjD;;;;;;;;;;;MAYD,mCAAW,GAAX;UACE,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;OAC1C;;;;;;;;;;;;;MAcD,gCAAQ,GAAR,UAAS,MAAkB;UACzB,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;cAC9B,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;WAChD;UACD,IAAM,IAAI,GAAiB,MAAO,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;UACxD,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;OAC9C;;;;;;;;;;;;MAaD,oCAAY,GAAZ,UAAa,MAAkB;UAC7B,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;cAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;WAClD;UACD,IAAM,EAAE,GAAiB,MAAO,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;UACpD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC;OAC9C;;;;;;;;MASD,+BAAO,GAAP,UAAQ,IAAY;UAClB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;OAC/B;;;;;;;;MASD,mCAAW,GAAX,UAAY,EAAU;UACpB,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;OAC/B;;;;;;;;;;;;MAaD,8BAAM,GAAN,UAAO,CAAe;UACpB,IAAM,QAAQ,GAAQ,EAAE,CAAC;UACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACzC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;kBACR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;eAClB;WACF,CAAC,CAAC;UACH,OAAO,QAAQ,CAAC;OACjB;;;;;;;;;;;MAYD,oCAAY,GAAZ,UAAa,EAAM,EAAE,EAAM;UACzB,OAAO,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;OAC/C;;;;;;;;;;;MAYD,kCAAU,GAAV,UAAW,EAAM,EAAE,EAAM;UACvB,OAAO,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;OAC3C;;;;;;MAMD,+BAAO,GAAP;UACE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;UACvB,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;UAC5B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;OAC7B;0BACF;GAAA;;ECzUD;;;;;;;;;;;;;;EAcA;EAEA,IAAI,aAAa,GAAG,UAAS,CAAC,EAAE,CAAC;MAC7B,aAAa,GAAG,MAAM,CAAC,cAAc;WAChC,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,KAAK,IAAI,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,CAAC;UAC5E,UAAU,CAAC,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC;cAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;kBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;MACtG,OAAO,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC;WAEc,SAAS,CAAC,CAAC,EAAE,CAAC;MAC1B,IAAI,OAAO,CAAC,KAAK,UAAU,IAAI,CAAC,KAAK,IAAI;UACrC,MAAM,IAAI,SAAS,CAAC,sBAAsB,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,+BAA+B,CAAC,CAAC;MAC9F,aAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MACpB,SAAS,EAAE,KAAK,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;MACvC,CAAC,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;EACzF,CAAC;EAEM,IAAI,QAAQ,GAAG;MAClB,QAAQ,GAAG,MAAM,CAAC,MAAM,IAAI,SAAS,QAAQ,CAAC,CAAC;UAC3C,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cACjD,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;cACjB,KAAK,IAAI,CAAC,IAAI,CAAC;kBAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;sBAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;WAChF;UACD,OAAO,CAAC,CAAC;OACZ,CAAA;MACD,OAAO,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;EAC3C,CAAC,CAAA;WAEe,MAAM,CAAC,CAAC,EAAE,CAAC;MACvB,IAAI,CAAC,GAAG,EAAE,CAAC;MACX,KAAK,IAAI,CAAC,IAAI,CAAC;UAAE,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC;cAC/E,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAChB,IAAI,CAAC,IAAI,IAAI,IAAI,OAAO,MAAM,CAAC,qBAAqB,KAAK,UAAU;UAC/D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;cACpE,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;kBAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;WACzB;MACL,OAAO,CAAC,CAAC;EACb,CAAC;WAEe,UAAU,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI;MACpD,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,MAAM,CAAC,wBAAwB,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC;MAC7H,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;UAAE,CAAC,GAAG,OAAO,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;;UAC1H,KAAK,IAAI,CAAC,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;cAAE,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC;kBAAE,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC;MAClJ,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;EAClE,CAAC;WAEe,OAAO,CAAC,UAAU,EAAE,SAAS;MACzC,OAAO,UAAU,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,UAAU,CAAC,CAAC,EAAE,CAAA;EACzE,CAAC;WAEe,UAAU,CAAC,WAAW,EAAE,aAAa;MACjD,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,OAAO,OAAO,CAAC,QAAQ,KAAK,UAAU;UAAE,OAAO,OAAO,CAAC,QAAQ,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;EACnI,CAAC;WAEe,SAAS,CAAC,OAAO,EAAE,UAAU,EAAE,CAAC,EAAE,SAAS;MACvD,SAAS,KAAK,CAAC,KAAK,IAAI,OAAO,KAAK,YAAY,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;MAC5G,OAAO,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,EAAE,UAAU,OAAO,EAAE,MAAM;UACrD,SAAS,SAAS,CAAC,KAAK,IAAI,IAAI;cAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;WAAE;UAAC,OAAO,CAAC,EAAE;cAAE,MAAM,CAAC,CAAC,CAAC,CAAC;WAAE,EAAE;UAC3F,SAAS,QAAQ,CAAC,KAAK,IAAI,IAAI;cAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;WAAE;UAAC,OAAO,CAAC,EAAE;cAAE,MAAM,CAAC,CAAC,CAAC,CAAC;WAAE,EAAE;UAC9F,SAAS,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,EAAE;UAC9G,IAAI,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;OACzE,CAAC,CAAC;EACP,CAAC;WAEe,WAAW,CAAC,OAAO,EAAE,IAAI;MACrC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,cAAa,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;cAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACjH,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,OAAO,MAAM,KAAK,UAAU,KAAK,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAa,OAAO,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;MACzJ,SAAS,IAAI,CAAC,CAAC,IAAI,OAAO,UAAU,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;MAClE,SAAS,IAAI,CAAC,EAAE;UACZ,IAAI,CAAC;cAAE,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAC;UAC9D,OAAO,CAAC;cAAE,IAAI;kBACV,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI;sBAAE,OAAO,CAAC,CAAC;kBAC7J,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC;sBAAE,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC;kBACxC,QAAQ,EAAE,CAAC,CAAC,CAAC;sBACT,KAAK,CAAC,CAAC;sBAAC,KAAK,CAAC;0BAAE,CAAC,GAAG,EAAE,CAAC;0BAAC,MAAM;sBAC9B,KAAK,CAAC;0BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;0BAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;sBACxD,KAAK,CAAC;0BAAE,CAAC,CAAC,KAAK,EAAE,CAAC;0BAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;0BAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;0BAAC,SAAS;sBACjD,KAAK,CAAC;0BAAE,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;0BAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;0BAAC,SAAS;sBACjD;0BACI,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;8BAAE,CAAC,GAAG,CAAC,CAAC;8BAAC,SAAS;2BAAE;0BAC5G,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;8BAAE,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;8BAAC,MAAM;2BAAE;0BACtF,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;8BAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;8BAAC,CAAC,GAAG,EAAE,CAAC;8BAAC,MAAM;2BAAE;0BACrE,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE;8BAAE,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;8BAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;8BAAC,MAAM;2BAAE;0BACnE,IAAI,CAAC,CAAC,CAAC,CAAC;8BAAE,CAAC,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;0BACtB,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;0BAAC,SAAS;mBAC9B;kBACD,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;eAC9B;cAAC,OAAO,CAAC,EAAE;kBAAE,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;kBAAC,CAAC,GAAG,CAAC,CAAC;eAAE;sBAAS;kBAAE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;eAAE;UAC1D,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC;cAAE,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC;UAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;OACpF;EACL,CAAC;EAEM,IAAI,eAAe,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;MAC9D,IAAI,EAAE,KAAK,SAAS;UAAE,EAAE,GAAG,CAAC,CAAC;MAC7B,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,cAAa,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;EACzF,CAAC,KAAK,UAAS,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE;MACtB,IAAI,EAAE,KAAK,SAAS;UAAE,EAAE,GAAG,CAAC,CAAC;MAC7B,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC,CAAC,CAAC;WAEa,YAAY,CAAC,CAAC,EAAE,CAAC;MAC7B,KAAK,IAAI,CAAC,IAAI,CAAC;UAAE,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;cAAE,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EAClH,CAAC;WAEe,QAAQ,CAAC,CAAC;MACtB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;MAC9E,IAAI,CAAC;UAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;MACxB,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,MAAM,KAAK,QAAQ;UAAE,OAAO;cAC1C,IAAI,EAAE;kBACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM;sBAAE,CAAC,GAAG,KAAK,CAAC,CAAC;kBACnC,OAAO,EAAE,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC;eAC3C;WACJ,CAAC;MACF,MAAM,IAAI,SAAS,CAAC,CAAC,GAAG,yBAAyB,GAAG,iCAAiC,CAAC,CAAC;EAC3F,CAAC;WAEe,MAAM,CAAC,CAAC,EAAE,CAAC;MACvB,IAAI,CAAC,GAAG,OAAO,MAAM,KAAK,UAAU,IAAI,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;MAC3D,IAAI,CAAC,CAAC;UAAE,OAAO,CAAC,CAAC;MACjB,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;MACjC,IAAI;UACA,OAAO,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;cAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;OAC9E;MACD,OAAO,KAAK,EAAE;UAAE,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;OAAE;cAC/B;UACJ,IAAI;cACA,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;kBAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WACpD;kBACO;cAAE,IAAI,CAAC;kBAAE,MAAM,CAAC,CAAC,KAAK,CAAC;WAAE;OACpC;MACD,OAAO,EAAE,CAAC;EACd,CAAC;EAED;WACgB,QAAQ;MACpB,KAAK,IAAI,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;UAC9C,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACzC,OAAO,EAAE,CAAC;EACd,CAAC;EAED;WACgB,cAAc;MAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;UAAE,CAAC,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;MACpF,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE;UAC5C,KAAK,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE;cAC7D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MACpB,OAAO,CAAC,CAAC;EACb,CAAC;WAEe,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI;MACxC,IAAI,IAAI,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;UAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;cACjF,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,IAAI,CAAC,EAAE;kBACpB,IAAI,CAAC,EAAE;sBAAE,EAAE,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;kBACrD,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;eACnB;WACJ;MACD,OAAO,EAAE,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,CAAC;EACjC,CAAC;WAEe,OAAO,CAAC,CAAC;MACrB,OAAO,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,IAAI,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC;EACzE,CAAC;WAEe,gBAAgB,CAAC,OAAO,EAAE,UAAU,EAAE,SAAS;MAC3D,IAAI,CAAC,MAAM,CAAC,aAAa;UAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;MACvF,IAAI,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,OAAO,EAAE,UAAU,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC;MAC9D,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;MACtH,SAAS,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;UAAE,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;MAC1I,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI;UAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;OAAE;MAAC,OAAO,CAAC,EAAE;UAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;OAAE,EAAE;MAClF,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,YAAY,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;MACxH,SAAS,OAAO,CAAC,KAAK,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,EAAE;MAClD,SAAS,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;MAClD,SAAS,MAAM,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,MAAM;UAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACtF,CAAC;WAEe,gBAAgB,CAAC,CAAC;MAC9B,IAAI,CAAC,EAAE,CAAC,CAAC;MACT,OAAO,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC;MAC5I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,KAAK,QAAQ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;EACnJ,CAAC;WAEe,aAAa,CAAC,CAAC;MAC3B,IAAI,CAAC,MAAM,CAAC,aAAa;UAAE,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAC;MACvF,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC;MACnC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,OAAO,QAAQ,KAAK,UAAU,GAAG,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,aAAa,CAAC,GAAG,cAAc,OAAO,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;MACjN,SAAS,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,UAAU,CAAC,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;MAChK,SAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAS,CAAC,IAAI,OAAO,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE;EAChI,CAAC;WAEe,oBAAoB,CAAC,MAAM,EAAE,GAAG;MAC5C,IAAI,MAAM,CAAC,cAAc,EAAE;UAAE,MAAM,CAAC,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC;OAAE;WAAM;UAAE,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;OAAE;MAC/G,OAAO,MAAM,CAAC;EAClB,CAAC;EAAA,CAAC;EAEF,IAAI,kBAAkB,GAAG,MAAM,CAAC,MAAM,IAAI,UAAS,CAAC,EAAE,CAAC;MACnD,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC;EACxE,CAAC,IAAI,UAAS,CAAC,EAAE,CAAC;MACd,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;EACrB,CAAC,CAAC;WAEc,YAAY,CAAC,GAAG;MAC5B,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU;UAAE,OAAO,GAAG,CAAC;MACtC,IAAI,MAAM,GAAG,EAAE,CAAC;MAChB,IAAI,GAAG,IAAI,IAAI;UAAE,KAAK,IAAI,CAAC,IAAI,GAAG;cAAE,IAAI,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;kBAAE,eAAe,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;MACzI,kBAAkB,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;MAChC,OAAO,MAAM,CAAC;EAClB,CAAC;WAEe,eAAe,CAAC,GAAG;MAC/B,OAAO,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC;EAC5D,CAAC;WAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;MAC3D,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;UAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;MAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;UAAE,MAAM,IAAI,SAAS,CAAC,0EAA0E,CAAC,CAAC;MACnL,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;EAClG,CAAC;WAEe,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;MAClE,IAAI,IAAI,KAAK,GAAG;UAAE,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAC;MACxE,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,CAAC;UAAE,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAC;MAC7F,IAAI,OAAO,KAAK,KAAK,UAAU,GAAG,QAAQ,KAAK,KAAK,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC;UAAE,MAAM,IAAI,SAAS,CAAC,yEAAyE,CAAC,CAAC;MAClL,OAAO,CAAC,IAAI,KAAK,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC;EAC9G;;ECxOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;WA6BgB,QAAQ,CAAuB,QAAa,EAAE,QAAW;MACvE,IAAM,kBAAkB,GAAG,IAAI,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAc,GAAA,CAAC,CAAC,CAAC;MACrF,OAAO,KAAK,CAAC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,CAAC;EACjD,CAAC;EAED;;;;;;;;;;;;;;;;;;;;;;;;;WAyBgB,MAAM,CAAI,QAAa,EAAE,QAAiB;MACxD,OAAO,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,MAAM,GAAG,IAAI,GAAG,KAAK,CAAC;EAC/E,CAAC;EAED;;;;;;;WAOgB,IAAI;MAClB,OAAOC,aAAM,EAAE,CAAC;EAClB,CAAC;EAED;;;;;;WAMgB,UAAU,CAAI,CAAI,EAAE,GAAY;MAC9C,IAAM,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,qBAAqB,CAAC,OAAO,CAAA;MACzD,IAAI,EAAE,GAAWA,aAAM,EAAE,CAAC;MACpB,CAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAA;MACtB,OAAO,EAAE,CAAA;EACX,CAAC;EAED;;;;;;WAMgB,WAAW,CAAI,CAAM,EAAE,GAAY;MACjD,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;UACT,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;OACpB,CAAC,CAAC;EACL,CAAC;EAED;;;;WAIgB,WAAW,CAAI,CAAI;MACjC,yBAAY,CAAC,EAAG;EAClB,CAAC;EAED;;;;WAIgB,QAAQ,CAAI,CAAI;MAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,CAAC;EAED;;;;;;;;;;;;;;WAcgB,cAAc,CAAI,CAAc;MAC9C,IAAI,CAAC,CAAC,IAAI,EAAE;UACV,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACpC;MACD,OAAO,IAAI,CAAC;EACd,CAAC;EAED;;;;;;;;;;;;;;WAcgB,WAAW,CAAI,MAAS,EAAE,OAAiB;MACzD,IAAM,IAAI,GAAa,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;MAC3C,OAAO,IAAI,CAAC,MAAM,CAAC,UAAC,GAAG;UACrB,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;OACjC,CAAC,CAAC;EACL,CAAC;EAED;;;;;;;WAOgB,MAAM,CAAI,KAAkB,EAAE,QAAa,EAAE,OAAsB;MAAzD,sBAAA,EAAA,UAAkB;MAAiB,wBAAA,EAAA,YAAsB;MACzE,IAAA,OAAO,GAAK,KAAK,QAAV,CAAU;MAEzB,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;MAG5B,OAAO,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAI;;;;;UAKnC,IAAM,IAAI,GAAG,WAAW,CAAC,CAAC,EAAE,OAAO,CAAC,CAAA;UACpC,OAAO,IAAI,CAAC,IAAI,CAAE,UAAC,GAAG;cACpB,IAAM,KAAK,GAAI,CAAS,CAAC,GAAG,CAAC,CAAC;cAC9B,IAAI,CAAC,KAAK,EAAE;kBACV,OAAO,KAAK,CAAC;eACd;cACD,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE;kBAClB,OAAO,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC;sBACjB,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;mBAChD,CAAC,CAAC;eACJ;mBACI;kBACH,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;eACpD;WACF,CAAC,CAAA;OACH,CAAC,CAAC;EACL,CAAC;EAED;;;;;;WAMgB,WAAW,CACzB,UAAe,EACf,UAAkB,EAClB,EAAkB;MAClB,OAAOC,cAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,IAAI,CACzCC,sBAAY,CAAC,UAAU,CAAC,EACxBC,8BAAoB,EAAE,EACtBJ,aAAG,CAAC,UAAA,CAAC,IAAI,OAAA,EAAE,EAAE,GAAA,CAAC,EACdK,kBAAQ,EAAE,EACVC,mBAAS,CAAC,UAAA,CAAC;UACX,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;UAClB,IAAM,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;UAClB,OAAO,EAAE,GAAG,EAAE,GAAG,CAAC,GAAGC,OAAE,CAAC,KAAK,CAAC,GAAGA,OAAE,CAAC,IAAI,CAAC,CAAA;OAC1C,CAAC,CAAC,CAAA;EACL,CAAC;EAED;;;;;;;;WAQgB,SAAS,CAAC,IAAa,EAAE,MAAU;MACjD,IAAM,MAAM,GAAO,EAAE,CAAA;MACrB,IAAI,CAAC,OAAO,CAAC,UAAA,CAAC;UACZ,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;OACtB,CAAC,CAAA;MACF,OAAO,MAAM,CAAA;EACf;;ECvOQ,IAAA,OAAO,GAAK,KAAK,QAAV,CAAU;;MAEK,yBAAgB;;;;;;;;;;;;;;;;;;;;;MA0B1C,eACW,KAAa,EACb,SAAuB,EACvB,MAAiB;UAH5B,YAII,iBAAO,SAOV;UAVU,WAAK,GAAL,KAAK,CAAQ;UACb,eAAS,GAAT,SAAS,CAAc;UACvB,YAAM,GAAN,MAAM,CAAW;;UAzBrB,aAAO,GAAmB,IAAI,GAAG,EAAE,CAAC;UA2BvC,IAAM,QAAQ,GAAQ,MAAM,CAAC,WAAW,EAAE,CAAA;UAC1C,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAA;UAC3B,IAAI,MAAM,GAAQ,KAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;UACjD,IAAM,KAAK,GAAa,EAAE,IAAI,gCAAyB,OAAO,EAAE,MAAM,EAAE,CAAC;UACzE,KAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;UAClB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;;OAC/B;;;;;;;MAQD,oBAAI,GAAJ,UAAK,CAAU;UACX,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;cACZ,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;WAChB;eACI;cACD,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;kBACnB,IAAM,EAAE,GAAS,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;kBACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;kBACxB,IAAM,KAAK,GAAa,EAAE,IAAI,qBAAoB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;kBACjE,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;eACjE;WACJ;OACJ;;;;;;;MAQD,qBAAK,GAAL;UAAM,WAAS;eAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;cAAT,sBAAS;;UACX,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;OACjB;;;;;;;MAQD,qBAAK,GAAL,UAAM,CAAM;UAAZ,iBAWC;UAVG,IAAM,CAAC,GAAQ,EAAE,CAAC;UAClB,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACP,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;kBACnB,IAAM,EAAE,GAAS,CAAE,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;kBACzC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;kBACxB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;eACb;WACJ,CAAC,CAAC;UACH,IAAM,KAAK,GAAa,EAAE,IAAI,qBAAoB,OAAO,EAAE,CAAC,EAAE,CAAC;UAC/D,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;OACjE;;;;;;MAOD,sBAAM,GAAN,UAAO,CAAU;UACb,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;cACZ,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;WAClB;eACI;cACD,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;kBACnB,IAAM,EAAE,GAAS,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;kBACxC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;kBACvB,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;kBAClE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,KAAK,CAAC,CAAA;eAC3D;WACJ;OACJ;;;;MAKD,uBAAO,GAAP;UAAQ,WAAS;eAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;cAAT,sBAAS;;UACb,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OACnB;;;;MAKD,uBAAO,GAAP,UAAQ,CAAM;UAAd,iBAWC;UAVG,IAAM,CAAC,GAAQ,EAAE,CAAA;UACjB,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACP,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;kBACnB,IAAM,EAAE,GAAS,CAAE,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;kBACxC,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,CAAA;kBAC7B,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;eAC1B;WACJ,CAAC,CAAC;UACH,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,EAAE,CAAC;UACjE,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;OACjE;;;;;;MAOD,mBAAG,GAAH,UAAI,CAAU;UACV,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;cACZ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;WACf;eACI;cACD,IAAM,EAAE,GAAS,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;cACzC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;kBACtB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;;;sBAGpB,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;sBACnE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;sBACxB,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;mBACjE;eACJ;mBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;kBAC1B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;kBACxB,IAAM,KAAK,GAAa,EAAE,IAAI,mBAAmB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;kBAChE,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;eACjE;WACJ;OACJ;;;;;;MAOD,oBAAI,GAAJ;UAAK,WAAS;eAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;cAAT,sBAAS;;UACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OAChB;;;;MAKD,oBAAI,GAAJ,UAAK,CAAM;UAAX,iBA2BC;UA1BG,IAAM,CAAC,GAAQ,EAAE,CAAC;UAClB,IAAM,CAAC,GAAQ,EAAE,CAAC;UAClB,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACP,IAAM,EAAE,GAAS,CAAE,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;cACzC,IAAI,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;kBACtB,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;sBACpB,CAAC,CAAC,IAAI,CAAC,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAE,CAAC,CAAC;mBACjC;eACJ;mBAAM,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;kBAC1B,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;eACb;WACJ,CAAC,CAAC;UACH,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;cACd,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACP,KAAI,CAAC,OAAO,CAAC,MAAM,CAAO,CAAE,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAA;eACrD,CAAC,CAAC;cACH,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,EAAE,CAAC;cACjE,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;WACjE;UACD,IAAI,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;cACd,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACP,KAAI,CAAC,OAAO,CAAC,GAAG,CAAO,CAAE,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;eACtD,CAAC,CAAC;cACH,IAAM,KAAK,GAAa,EAAE,IAAI,mBAAmB,OAAO,EAAE,CAAC,EAAE,CAAC;cAC9D,IAAI,CAAC,SAAS,0BAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,IAAG,KAAK,CAAC,CAAC;WACjE;OACJ;;;;MAKD,qBAAK,GAAL;UACI,IAAI,KAAK,GAAa;cAClB,IAAI;cACJ,OAAO,2BAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC;WAClD,CAAC;UACF,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;OAC5B;;;;;;;;;;;;MAaM,oBAAI,GAAJ,UAAK,CAAe,EAAE,CAAM;UAC/B,IAAI,CAAC,GAAQ,EAAE,CAAC;UAChB,CAAC,CAAC,OAAO,CAAC,UAAC,CAAI;cACX,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;kBACN,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;eACb;WACJ,CAAC,CAAC;UACH,OAAO,CAAC,CAAC;OACZ;kBACJ;GAtOD,CAA8B,aAAgB;;ECG9C;;;;;;;;;;;;;;;;;;;;;;MAsB+B,0BAAgB;;;;;;;;;;;;;MAa7C,gBAAY,QAAkB,EAAE,MAAoB;UAAxC,yBAAA,EAAA,aAAkB;UAA9B,YACE,kBAAM,MAAM,CAAC,SAId;;;;;UA4CM,gBAAU,GAAoB,KAAI,CAAC,OAAO,EAAE,CAAA;;;;UAK3C,kBAAY,GAAG,IAAIR,kBAAa,CAAiB,CAAC,CAAC,CAAC;;;;;;UAQrD,YAAM,GAAmB,IAAI,GAAG,EAAE,CAAC;;;;;;;UAmGlC,mBAAa,GAAG,IAAIA,kBAAa,CAAU,CAAC,CAAC,CAAC;;;;;;;;;;;;UAa9C,cAAQ,GAAY,IAAI,CAAC;;;;;;;UAqEzB,qBAAe,GAAG,IAAIA,kBAAa,CAAU,CAAC,CAAC,CAAC;;;;;;;UAQhD,gBAAU,GAAY,KAAK,CAAC;;;;UAwD5B,YAAM,GAA0B,IAAI,GAAG,EAAE,CAAC;UAjThD,IAAM,KAAK,GAAa,EAAE,IAAI,gCAAyB,OAAO,EAAE,QAAQ,EAAE,CAAC;UAC3E,KAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;UACnB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;;OAC9B;;;;;;MAOD,wBAAO,GAAP;UACE,iBAAM,OAAO,WAAE,CAAA;UACf,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAA;UAC7B,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAA;UAC5B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,OAAO,EAAE,GAAA,CAAC,CAAA;OAC9C;;;;;;;;;;;;;;;;;;;MAoBM,uBAAM,GAAN,UAAO,CAAI;UAChB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;cACpB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;WAChB;eAAM;cACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WACd;OACF;;;;;;;;;;;;;;;;;;MAsCM,0BAAS,GAAT,UAAU,CAAI;UACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;cACpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAO,CAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;cACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;WAC9C;eACI;cACH,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;cACb,IAAI,CAAC,MAAM,CAAC,GAAG,CAAO,CAAE,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;cACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;WAC9C;OACF;;;;;;;;;;;;;;;MAgBM,6BAAY,GAAZ,UAAa,CAAI;UACtB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAO,CAAE,CAAC,GAAG,CAAC,CAAC;UACjC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;OAC9C;;;;;;;;;;;;;;;MAgBD,4BAAW,GAAX;UACE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;UACpB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;OAC9C;;;;;;;;MASM,8BAAa,GAAb;UACL,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAA;OACxC;MAuCD,sBAAI,2BAAO;;;;eAQX;cACE,OAAO,IAAI,CAAC,QAAQ,CAAC;WACtB;;;;eAVD,UAAY,OAAgB;cAC1B,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;cACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;WACxC;;;SAAA;;;;;;;;;;;;;;;;;MAyBM,+BAAc,GAAd;UACL,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE;cACtC,IAAI,CAACS,mBAAS,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAE,IAAI,CAAC,CAAC,CAAC;OACjC;;;;MAKM,uCAAsB,GAAtB;UACL,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAC/BC,gBAAM,CAAC,UAAA,OAAO,IAAI,OAAA,OAAO,IAAI,KAAK,GAAA,CAAC,EACnCH,mBAAS,CAAC,cAAM,OAAAC,OAAE,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,CAAA;OAC7B;MAqCD,sBAAI,6BAAS;;;;eAQb;cACE,OAAO,IAAI,CAAC,UAAU,CAAC;WACxB;;;;eAVD,UAAc,SAAkB;cAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;cAC5B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;WAC5C;;;SAAA;;;;;;;;;;;;;;;;;MAyBM,iCAAgB,GAAhB;UACL,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE;cACxC,IAAI,CAACC,mBAAS,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAA,EAAE,IAAI,CAAC,CAAC,CAAC;OACjC;;;;MAKM,yCAAwB,GAAxB;UACL,OAAO,IAAI,CAAC,gBAAgB,EAAE,CAAC,IAAI,CACjCC,gBAAM,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,IAAI,KAAK,GAAA,CAAC,EACvCH,mBAAS,CAAC,cAAM,OAAAC,OAAE,CAAC,IAAI,CAAC,GAAA,CAAC,CAAC,CAAA;OAC7B;;;;;;;;;;;;MAwBD,yBAAQ,GAAR,UAAS,CAAe,EAAE,KAAa;UACrC,IAAM,KAAK,GAAa,IAAI,KAAK,CAC/B,KAAK,EACL,CAAC,EACD,IAAI,CAAC,CAAA;UACP,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;OACpC;;;;;;;;;;MAWD,4BAAW,GAAX,UAAY,KAAa;UACvB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;OAC3B;;;;;;;;;;;MAYD,yBAAQ,GAAR,UAAS,KAAa;UACpB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;OAC/B;;;;;;;;;MAUD,qBAAI,GAAJ,UAAK,CAAU;UACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;cACrB,IAAM,IAAI,GAAiB,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAClC,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;oBACvB,IAAI,EAAE,CAAC;cACL,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;cAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC1B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;cACtB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACxC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;eACX,CAAC,CAAC;;cAEH,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;cACpD,IAAM,KAAK,GAAa,EAAE,IAAI,qBAAoB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;cACjE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;WAC1B;eACI;cACH,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;WACd;OACF;;;;;;;;;MAUD,sBAAK,GAAL;UAAA,iBAgBC;UAhBK,WAAS;eAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;cAAT,sBAAS;;UACb,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACT,IAAM,IAAI,GAAiB,CAAE,CAAC,KAAI,CAAC,QAAQ,CAAC;oBAClC,CAAE,CAAC,KAAI,CAAC,QAAQ,CAAC;oBACvB,IAAI,EAAE,CAAC;cACL,CAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;cAC/B,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;cAC1B,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;WACvB,CAAC,CAAC;UACH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACxC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;WACZ,CAAC,CAAC;;UAEH,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;UACpD,IAAM,KAAK,GAAa,EAAE,IAAI,qBAAoB,OAAO,EAAE,CAAC,EAAE,CAAC;UAC/D,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;OAC1B;;;;;;;;;MAUD,sBAAK,GAAL,UAAM,CAAM;UACV,IAAI,CAAC,KAAK,OAAV,IAAI,2BAAU,CAAC,IAAE;OAClB;;;;;;;;;MAUD,oBAAG,GAAH,UAAI,CAAU;UACZ,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;cACrB,IAAI,EAAE,GAAiB,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;cACxB,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;cACtB,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;cACpD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;cACpB,IAAM,KAAK,GAAa,EAAE,IAAI,mBAAmB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;cAChE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;cAC7B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACxC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;eACV,CAAC,CAAC;WACJ;eACI;cACH,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;WACb;OACF;;;;;;;;;;MAWD,qBAAI,GAAJ;UAAK,WAAS;eAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;cAAT,sBAAS;;UACZ,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;OACd;;;;;;;;;MAUD,qBAAI,GAAJ,UAAK,CAAM;UAAX,iBAcC;UAbC,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACT,IAAI,IAAI,GAAiB,CAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAA;cAC1C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;cACzB,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;WACvB,CAAC,CAAC;;UAEH,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;UACpD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACpB,IAAM,KAAK,GAAa,EAAE,IAAI,mBAAmB,OAAO,EAAE,CAAC,EAAE,CAAC;UAC9D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;UAC7B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACxC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;WACX,CAAC,CAAC;OACJ;;;;;;;;;MAUD,uBAAM,GAAN,UAAO,CAAU;UACf,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;cACrB,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;cACrB,IAAM,MAAI,GAAS,CAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;cACrC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAI,CAAC,CAAC;cAC1B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;cACtB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACxC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,MAAI,CAAC,CAAC;eACxB,CAAC,CAAC;;cAEH,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;cACpD,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;cACnE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;cACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACxC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;eACb,CAAC,CAAC;WACJ;eACI;cACH,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;WAChB;OAEF;;;;;;;;;MAUD,wBAAO,GAAP;UAAQ,WAAS;eAAT,UAAS,EAAT,qBAAS,EAAT,IAAS;cAAT,sBAAS;;UACf,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;OACjB;;;;;;;;;MAUD,wBAAO,GAAP,UAAQ,CAAM;UAAd,iBAiBC;UAhBC,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACT,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;cACrB,IAAM,IAAI,GAAS,CAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;cACrC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;cAC1B,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;cACtB,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;kBACxC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;eACxB,CAAC,CAAC;WACJ,CAAC,CAAC;;UAEH,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;UACpD,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,EAAE,CAAC;UACjE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;UACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACxC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;WACd,CAAC,CAAC;OACJ;;;;;;;;;MAUD,wBAAO,GAAP,UAAQ,CAAe;UAAvB,iBAkBC;UAjBC,IAAM,CAAC,GAAQ,EAAE,CAAC;UAClB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACzC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;kBACR,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;kBACV,IAAM,EAAE,GAAS,CAAE,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;kBACnC,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;kBACxB,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;kBACrB,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;eACvB;WACF,CAAC,CAAC;;UAEH,IAAI,CAAC,4BAAY,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,EAAC,CAAC;UACpD,IAAM,KAAK,GAAa,EAAE,IAAI,yBAAsB,OAAO,EAAE,CAAC,EAAE,CAAC;UACjE,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;UACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACxC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;WACd,CAAC,CAAC;OACJ;;;;;;;MAQO,8BAAa,GAAb,UAAc,CAAI;UACxB,IAAU,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;cACzB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAO,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;WAC9C;OACF;;;;;;;MAQO,8BAAa,GAAb,UAAc,CAAI;UACxB,IAAU,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;cACzB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAO,CAAE,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;WAC9C;OACF;;;;;;;;;;;;MAaD,sBAAK,GAAL;UACE,IAAM,KAAK,GAAa;cACtB,IAAI;cACJ,OAAO,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;WAC3C,CAAC;UACF,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC;UAC1B,IAAI,CAAC,OAAO,GAAG,IAAI,GAAG,EAAE,CAAC;UACzB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC;cACxC,CAAC,CAAC,KAAK,EAAE,CAAC;WACX,CAAC,CAAC;OACJ;;;;;;;MAQS,0BAAS,GAAT,UAAU,CAAM,EAAE,KAAe;UACzC,iBAAM,SAAS,YAAC,CAAC,EAAE,KAAK,CAAC,CAAC;UAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;OACvC;mBACF;GA7oBD,CAA+B,aAAgB;;;MCG3C,gBAAY,KAAkB;UAA9B,iBAUC;;;;;UA6BM,YAAO,GAAkB,IAAI,GAAG,EAAE,CAAA;;;;UAKjC,aAAQ,GAAiC,IAAI,GAAG,EAAE,CAAA;UA3CtD,IAAI,KAAK,EAAE;cACP,IAAI,CAAC,CAAC,GAAQ,KAAK,CAAC;cACpB,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;cAC/B,IAAI,CAAC,OAAO,CAAC,UAAC,CAAC;kBACX,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAkB,CAAA;kBACrC,KAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,CAAC,CAAA;kBACzB,GAAG,CAAC,GAAG,GAAG,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAA;eAC9B,CAAC,CAAA;WACL;OACJ;;;;;;MAOM,sBAAK,GAAL;UAAA,iBAQN;UAPG,IAAI,IAAI,CAAC,CAAC,EAAE;cACR,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;cAChC,IAAI,CAAC,OAAO,CAAC,UAAC,CAAC;kBACX,IAAM,GAAG,GAAkB,KAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;kBACpC,KAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,CAAA;eACnD,CAAC,CAAA;WACL;OACJ;;;;MAKM,sBAAK,GAAL;UACH,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;OACvB;;;;;;;;;MAsBM,qBAAI,GAAJ,UAAK,GAAQ,EAAE,KAAU;UAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;UAC5B,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,IAAIR,kBAAa,CAAC,CAAC,CAAC,CAAC,CAAA;;;UAG5C,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;UACtC,IAAI,OAAO,EAAE;cACT,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;WACtB;OACJ;;;;;;;MAOM,oBAAG,GAAH,UAAI,GAAQ,EAAE,KAAU;UAC3B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAA;UAC5B,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;UACtC,IAAI,OAAO,EAAE;cACT,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;WACtB;OACJ;;;;;;;;MASM,uBAAM,GAAN,UAAO,GAAQ;UAClB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;UACxB,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;UACzB,IAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;UACtC,IAAI,OAAO,EAAE;cACT,OAAO,CAAC,WAAW,EAAE,CAAA;WACxB;OACJ;;;;;;;MAQM,wBAAO,GAAP,UAAQ,GAAQ;UACnB,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAE,CAAC,YAAY,EAAE,CAAA;OAChD;;;;;;;MAQM,uBAAM,GAAN,UAAO,GAAQ;UAClB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAAA;OACvC;;;;;;;;MASM,yBAAQ,GAAR,UAAS,GAAQ;UACpB,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;OAC/B;;;;;MAMM,wBAAO,GAAP;UACH,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,IAAI,CAAC,CAAA;OACvD;;;;;;MAOM,sBAAK,GAAL;UACH,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAA;OAClD;mBACJ;GAAA;;EC/KD;;;;ECAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}