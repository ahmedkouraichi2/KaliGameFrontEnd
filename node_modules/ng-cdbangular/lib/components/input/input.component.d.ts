import { AfterViewInit, ElementRef, OnInit, Renderer2 } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class InputComponent implements OnInit, AfterViewInit {
    private elRef;
    private renderer;
    class: string;
    containerClass: string;
    labelClass: string;
    id: string;
    style: string;
    label: string;
    hint: string;
    type: string;
    material: boolean;
    background: boolean;
    disabled: boolean;
    name: string;
    required: boolean;
    rows: number;
    cols: number;
    value: number | string | boolean;
    size: string;
    group: boolean;
    containerId: string;
    labelId: string;
    inputContainer: ElementRef;
    input: ElementRef;
    inputLabel: ElementRef;
    /****** Input States ******/
    isFocused: boolean;
    isPristine: boolean;
    isDirty: boolean;
    /**** Input States End *****/
    constructor(elRef: ElementRef, renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    onFocus(input: any): void;
    onBlur(input: any): void;
    inputChange(input: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<InputComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<InputComponent, "CDBInput", never, { "hint": "hint"; "type": "type"; "material": "material"; "background": "background"; "disabled": "disabled"; "name": "name"; "required": "required"; "value": "value"; "size": "size"; "group": "group"; "class": "class"; "containerClass": "containerClass"; "labelClass": "labelClass"; "id": "id"; "style": "style"; "label": "label"; "rows": "rows"; "cols": "cols"; "containerId": "containerId"; "labelId": "labelId"; }, {}, never, [".input-group-prepend", ".input-group-append"]>;
}

//# sourceMappingURL=input.component.d.ts.map